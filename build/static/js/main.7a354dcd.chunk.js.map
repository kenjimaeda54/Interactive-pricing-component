{"version":3,"sources":["components/slider.ts","components/switch.ts","my-project/myProject.tsx","App.tsx","index.tsx"],"names":["SliderBlue","withStyles","thumb","color","blue","height","track","rail","grey","mark","red","Slider","PurpleSwitch","switchBase","backgroundColor","checked","Switch","MyProject","useState","valueMounth","setValueMounth","valueChecked","setValueChecked","className","disabled","marks","value","onChange","item","target","addEventListener","p","handleChange","style","margin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAMaA,EAAaC,YAAW,CACnCC,MAAO,CACLC,MAAOC,IAAK,KACZC,OAAQ,IAGVC,MAAO,CACLH,MAAOC,IAAK,MAEdG,KAAM,CACJJ,MAAOK,IAAK,MAEdC,KAAM,CACJN,MAAOO,IAAI,OAbWT,CAevBU,K,QChBUC,EAAeX,YAAW,CACrCY,WAAY,CACVV,MAAOK,IAAK,KACZ,YAAa,CACXL,MAAOC,IAAK,MAEd,qBAAsB,CACpBU,gBAAiBV,IAAK,OAG1BW,QAAS,GACTT,MAAO,IAXmBL,CAYzBe,K,OCZY,SAASC,IAA0B,IAAD,EACTC,mBAAS,GADA,mBACxCC,EADwC,KAC3BC,EAD2B,OAEPF,oBAAS,GAFF,mBAExCG,EAFwC,KAE1BC,EAF0B,KAY/C,OACE,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,QAAf,UACE,gEACA,6DACA,8DAEF,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,4BACA,qBAAKA,UAAU,aAAf,SACE,cAACvB,EAAD,CACEwB,SAAUH,EACVI,MAAOJ,EACPK,MAAOP,EACPI,UAAU,SACVI,SAAU,SAACC,EAAMF,GAAP,OACRE,EAAKC,OAAOC,iBAAiB,WAAW,WACtC,OAzBO,SAACC,GACpB,GAAiB,kBAANA,EAIX,OAAO,KAHLX,EAAeW,GAuBEC,CAAaN,WAK5B,sBAAKH,UAAU,QAAf,UACE,sBAAKA,UAAU,oBAAf,cAAqCJ,KACrC,sBAAMI,UAAU,aAAhB,wBAEF,sBAAKA,UAAU,UAAf,UACE,sBAAMA,UAAU,eAAhB,+BACA,qBAAKA,UAAU,kBAAf,SACE,cAACX,EAAD,CACEe,SAAU,SAACC,GAAD,OAAUN,EAAgBM,EAAKC,OAAOd,cAGpD,mBAAGQ,UAAU,aAAb,4BACA,mBAAGA,UAAU,aAAb,qBAEF,sBAAKA,UAAU,aAAf,UACE,8BACE,+BACE,oDACA,oBAAIU,MAAO,CAAEC,OAAQ,YAArB,iCACA,oDAGJ,wBAAQX,UAAU,SAAlB,sCClDKY,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAACN,EAAD,OCDNmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a354dcd.chunk.js","sourcesContent":["import grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport blue from '@material-ui/core/colors/blue';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nexport const SliderBlue = withStyles({\n  thumb: {\n    color: blue[300],\n    height: 15,\n  },\n  //track estilo aplicado no campo selecionado\n  track: {\n    color: blue[100],\n  },\n  rail: {\n    color: grey[500],\n  },\n  mark: {\n    color: red[800],\n  },\n})(Slider);\n","import grey from '@material-ui/core/colors/grey';\nimport blue from '@material-ui/core/colors/blue';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\n\nexport const PurpleSwitch = withStyles({\n  switchBase: {\n    color: grey[300],\n    '&$checked': {\n      color: blue[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: blue[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n","import React, { useState } from 'react';\nimport '../assests/css/myProject.css';\nimport { SliderBlue } from '../components/slider';\nimport { PurpleSwitch } from '../components/switch';\n\nexport default function MyProject(): JSX.Element {\n  const [valueMounth, setValueMounth] = useState(0);\n  const [valueChecked, setValueChecked] = useState(false);\n\n  const handleChange = (p: any) => {\n    if (typeof p === 'number') {\n      setValueMounth(p);\n      return;\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"title\">\n        <h1> Simple, traffic-based pricing</h1>\n        <p>Sign-up for our 30-day trial</p>\n        <p> No credit card required. </p>\n      </div>\n      <div className=\"main\">\n        <h2 className=\"desktop-h2\">100K PAGEVIEWS</h2>\n        <div className=\"div-slider\">\n          <SliderBlue\n            disabled={valueChecked}\n            marks={valueChecked}\n            value={valueMounth}\n            className=\"slider\"\n            onChange={(item, value) =>\n              item.target.addEventListener('mouseup', function () {\n                return handleChange(value);\n              })\n            }\n          />\n        </div>\n        <div className=\"month\">\n          <div className=\"mount item-slider\">${valueMounth}</div>\n          <span className=\"mount span\"> /month</span>\n        </div>\n        <div className=\"billing\">\n          <span className=\"billing span\"> Monthly Billing </span>\n          <div className=\"billing switch \">\n            <PurpleSwitch\n              onChange={(item) => setValueChecked(item.target.checked)}\n            />\n          </div>\n          <p className=\"billing p1\">Yearly Billing</p>\n          <p className=\"billing p2\">-25%</p>\n        </div>\n        <div className=\"navigation\">\n          <nav>\n            <ul>\n              <li>Unlimited websites</li>\n              <li style={{ margin: '1vh auto' }}>100% data ownership</li>\n              <li>Email reports</li>\n            </ul>\n          </nav>\n          <button className=\"button\">Start My Trial </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport MyProject from './my-project/myProject';\n\nfunction App(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <MyProject />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}